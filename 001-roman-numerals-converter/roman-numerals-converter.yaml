AWSTemplateFormatVersion: 2010-09-09
Description: |
  CloudFormation Template for Roman Numerals Converter Application. 
  This template creates Python Flask Web Application on Amazon Linux 2 AMI
  (latest ami) EC2 Instance with custom security group 
  allowing http connections on port 80 and SSH connection on port 22. 
  Roman Numerals Converter Application is downloaded from Github 
  repository, then installed on Flask.
Parameters:
  KeyName:
    Description: Select your keypair
    Type: AWS::EC2::KeyPair::KeyName
    Default: okt-aws

  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'

Resources:
  
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow 22 and 80 port # Required
      SecurityGroupIngress: 
        - CidrIp: 0.0.0.0/0
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80

  WebServerHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - !Ref WebServerSecurityGroup
      Tags: 
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName}
      UserData: 
       !Base64 |
        #! /bin/bash
        yum update -y
        yum install python3
        pip3 install flask
        yum install git -y
        cd /home/ec2-user
        wget -P templates https://raw.githubusercontent.com/okti3535/aws-projects-de09/refs/heads/main/001-roman-numerals-converter/templates/index.html
        wget -P templates https://raw.githubusercontent.com/okti3535/aws-projects-de09/refs/heads/main/001-roman-numerals-converter/templates/result.html
        wget https://raw.githubusercontent.com/okti3535/aws-projects-de09/refs/heads/main/001-roman-numerals-converter/roman-numerals-converter-app.py
        python3 roman-numerals-converter-app.py

Outputs:
  WebSiteURL:
    Value: !Sub 
     - http://${WebSiteURL}
     - WebSiteURL: !GetAtt WebServerHost.PublicDnsName

  PrivateIp:
    Value: !Sub 
     - Private Ip of instance is ${Privateip}
     - Privateip: !GetAtt WebServerHost.PrivateIp